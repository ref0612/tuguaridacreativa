{"ast":null,"code":"import axios from 'axios';\nimport store from '../../store/store';\nimport { logoutUser } from '../../store/slices/authSlice';\n\n// Obtener la URL base del backend desde las variables de entorno o usar localhost:3000 por defecto\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n\n// Configuración base de axios\nconst api = axios.create({\n  baseURL: `${API_BASE_URL}/api`,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: true // Importante para manejar cookies de autenticación\n});\n\n// Interceptor para agregar el token de autenticación a las solicitudes\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptor para manejar respuestas\napi.interceptors.response.use(response => {\n  // Puedes hacer algún procesamiento de respuesta global aquí si es necesario\n  return response;\n}, async error => {\n  var _error$response, _error$response2;\n  const originalRequest = error.config;\n\n  // Si el error es 401 (No autorizado) y no es una solicitud de renovación de token\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    // Si es la ruta de login, simplemente rechazamos el error\n    if (originalRequest.url.includes('/auth/login') || originalRequest.url.includes('/auth/refresh-token')) {\n      return Promise.reject(error);\n    }\n\n    // Intentar renovar el token\n    try {\n      originalRequest._retry = true;\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (refreshToken) {\n        // Hacer una petición para renovar el token\n        const response = await axios.post(`${API_BASE_URL}/api/auth/refresh-token`, {\n          refreshToken\n        });\n        const {\n          accessToken,\n          refreshToken: newRefreshToken\n        } = response.data;\n\n        // Actualizar los tokens\n        localStorage.setItem('token', accessToken);\n        localStorage.setItem('refreshToken', newRefreshToken);\n\n        // Actualizar el encabezado de autorización\n        originalRequest.headers.Authorization = `Bearer ${accessToken}`;\n\n        // Reintentar la petición original\n        return api(originalRequest);\n      } else {\n        // No hay refresh token, hacer logout\n        store.dispatch(logoutUser());\n        window.location.href = '/login';\n        return Promise.reject(error);\n      }\n    } catch (refreshError) {\n      // Error al renovar el token, hacer logout\n      store.dispatch(logoutUser());\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n\n  // Manejar otros códigos de error\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n    // Acceso denegado\n    // Podrías redirigir a una página de acceso denegado\n    console.error('Acceso denegado: No tienes permisos para acceder a este recurso');\n  }\n\n  // Para otros errores, simplemente los rechazamos\n  return Promise.reject(error);\n});\n\n// Exportar métodos HTTP comunes para facilitar su uso\nconst get = (url, config = {}) => api.get(url, config);\nconst post = (url, data, config = {}) => api.post(url, data, config);\nconst put = (url, data, config = {}) => api.put(url, data, config);\nconst del = (url, config = {}) => api.delete(url, config);\nexport { get, post, put, del };\nexport default api;","map":{"version":3,"names":["axios","store","logoutUser","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","originalRequest","status","_retry","url","includes","refreshToken","post","accessToken","newRefreshToken","data","setItem","dispatch","window","location","href","refreshError","console","get","put","del","delete"],"sources":["C:/Users/ferna/Desktop/ecommerce/frontend-ecommerce/src/lib/api/api.ts"],"sourcesContent":["import axios from 'axios';\nimport store from '../../store/store';\nimport { logoutUser } from '../../store/slices/authSlice';\n\n// Obtener la URL base del backend desde las variables de entorno o usar localhost:3000 por defecto\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n\n// Configuración base de axios\nconst api = axios.create({\n  baseURL: `${API_BASE_URL}/api`,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n  withCredentials: true, // Importante para manejar cookies de autenticación\n});\n\n// Interceptor para agregar el token de autenticación a las solicitudes\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Interceptor para manejar respuestas\napi.interceptors.response.use(\n  (response) => {\n    // Puedes hacer algún procesamiento de respuesta global aquí si es necesario\n    return response;\n  },\n  async (error) => {\n    const originalRequest = error.config;\n    \n    // Si el error es 401 (No autorizado) y no es una solicitud de renovación de token\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      // Si es la ruta de login, simplemente rechazamos el error\n      if (originalRequest.url.includes('/auth/login') || \n          originalRequest.url.includes('/auth/refresh-token')) {\n        return Promise.reject(error);\n      }\n\n      // Intentar renovar el token\n      try {\n        originalRequest._retry = true;\n        const refreshToken = localStorage.getItem('refreshToken');\n        \n        if (refreshToken) {\n          // Hacer una petición para renovar el token\n          const response = await axios.post(`${API_BASE_URL}/api/auth/refresh-token`, {\n            refreshToken,\n          });\n          \n          const { accessToken, refreshToken: newRefreshToken } = response.data;\n          \n          // Actualizar los tokens\n          localStorage.setItem('token', accessToken);\n          localStorage.setItem('refreshToken', newRefreshToken);\n          \n          // Actualizar el encabezado de autorización\n          originalRequest.headers.Authorization = `Bearer ${accessToken}`;\n          \n          // Reintentar la petición original\n          return api(originalRequest);\n        } else {\n          // No hay refresh token, hacer logout\n          store.dispatch(logoutUser());\n          window.location.href = '/login';\n          return Promise.reject(error);\n        }\n      } catch (refreshError) {\n        // Error al renovar el token, hacer logout\n        store.dispatch(logoutUser());\n        window.location.href = '/login';\n        return Promise.reject(refreshError);\n      }\n    }\n    \n    // Manejar otros códigos de error\n    if (error.response?.status === 403) {\n      // Acceso denegado\n      // Podrías redirigir a una página de acceso denegado\n      console.error('Acceso denegado: No tienes permisos para acceder a este recurso');\n    }\n    \n    // Para otros errores, simplemente los rechazamos\n    return Promise.reject(error);\n  }\n);\n\n// Exportar métodos HTTP comunes para facilitar su uso\nconst get = (url: string, config = {}) => api.get(url, config);\nconst post = (url: string, data: any, config = {}) => api.post(url, data, config);\nconst put = (url: string, data: any, config = {}) => api.put(url, data, config);\nconst del = (url: string, config = {}) => api.delete(url, config);\n\nexport { get, post, put, del };\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,UAAU,QAAQ,8BAA8B;;AAEzD;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAE7E;AACA,MAAMC,GAAG,GAAGP,KAAK,CAACQ,MAAM,CAAC;EACvBC,OAAO,EAAE,GAAGN,YAAY,MAAM;EAC9BO,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ,CAAC;EACDC,eAAe,EAAE,IAAI,CAAE;AACzB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,GAAG,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZ;EACA,OAAOA,QAAQ;AACjB,CAAC,EACD,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA,EAAAC,gBAAA;EACf,MAAMC,eAAe,GAAGN,KAAK,CAACL,MAAM;;EAEpC;EACA,IAAI,EAAAS,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBG,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7D;IACA,IAAIF,eAAe,CAACG,GAAG,CAACC,QAAQ,CAAC,aAAa,CAAC,IAC3CJ,eAAe,CAACG,GAAG,CAACC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;MACvD,OAAOT,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;IAC9B;;IAEA;IACA,IAAI;MACFM,eAAe,CAACE,MAAM,GAAG,IAAI;MAC7B,MAAMG,YAAY,GAAGd,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAEzD,IAAIa,YAAY,EAAE;QAChB;QACA,MAAMR,QAAQ,GAAG,MAAMvB,KAAK,CAACgC,IAAI,CAAC,GAAG7B,YAAY,yBAAyB,EAAE;UAC1E4B;QACF,CAAC,CAAC;QAEF,MAAM;UAAEE,WAAW;UAAEF,YAAY,EAAEG;QAAgB,CAAC,GAAGX,QAAQ,CAACY,IAAI;;QAEpE;QACAlB,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEH,WAAW,CAAC;QAC1ChB,YAAY,CAACmB,OAAO,CAAC,cAAc,EAAEF,eAAe,CAAC;;QAErD;QACAR,eAAe,CAAChB,OAAO,CAACS,aAAa,GAAG,UAAUc,WAAW,EAAE;;QAE/D;QACA,OAAO1B,GAAG,CAACmB,eAAe,CAAC;MAC7B,CAAC,MAAM;QACL;QACAzB,KAAK,CAACoC,QAAQ,CAACnC,UAAU,CAAC,CAAC,CAAC;QAC5BoC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QAC/B,OAAOnB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOqB,YAAY,EAAE;MACrB;MACAxC,KAAK,CAACoC,QAAQ,CAACnC,UAAU,CAAC,CAAC,CAAC;MAC5BoC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B,OAAOnB,OAAO,CAACC,MAAM,CAACmB,YAAY,CAAC;IACrC;EACF;;EAEA;EACA,IAAI,EAAAhB,gBAAA,GAAAL,KAAK,CAACG,QAAQ,cAAAE,gBAAA,uBAAdA,gBAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;IAClC;IACA;IACAe,OAAO,CAACtB,KAAK,CAAC,iEAAiE,CAAC;EAClF;;EAEA;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,MAAMuB,GAAG,GAAGA,CAACd,GAAW,EAAEd,MAAM,GAAG,CAAC,CAAC,KAAKR,GAAG,CAACoC,GAAG,CAACd,GAAG,EAAEd,MAAM,CAAC;AAC9D,MAAMiB,IAAI,GAAGA,CAACH,GAAW,EAAEM,IAAS,EAAEpB,MAAM,GAAG,CAAC,CAAC,KAAKR,GAAG,CAACyB,IAAI,CAACH,GAAG,EAAEM,IAAI,EAAEpB,MAAM,CAAC;AACjF,MAAM6B,GAAG,GAAGA,CAACf,GAAW,EAAEM,IAAS,EAAEpB,MAAM,GAAG,CAAC,CAAC,KAAKR,GAAG,CAACqC,GAAG,CAACf,GAAG,EAAEM,IAAI,EAAEpB,MAAM,CAAC;AAC/E,MAAM8B,GAAG,GAAGA,CAAChB,GAAW,EAAEd,MAAM,GAAG,CAAC,CAAC,KAAKR,GAAG,CAACuC,MAAM,CAACjB,GAAG,EAAEd,MAAM,CAAC;AAEjE,SAAS4B,GAAG,EAAEX,IAAI,EAAEY,GAAG,EAAEC,GAAG;AAC5B,eAAetC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}